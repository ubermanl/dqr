# coding: utf-8

from __future__ import absolute_import

from . import BaseTestCase
from six import BytesIO
from flask import json


class TestAmbienceController(BaseTestCase):
    """ AmbienceController integration test stubs """

    def test_do_training(self):
        """
        Test case for do_training

        Realizar el entrenamiento para un dispositivo Lux
        """
        response = self.client.open('//train/{LUX_ID}'.format(LUX_ID=56),
                                    method='GET')
        self.assert200(response, "Response body is : " + response.data.decode('utf-8'))

    def test_get_suggested_state(self):
        """
        Test case for get_suggested_state

        Consultar el estado sugerido de un dispositivo Lux
        """
        response = self.client.open('//getSuggestedState/{LUX_ID}/{WEEKDAY}/{MINDAY}/{LIGHT_LUX_1m}/{SOUND}/{MOVEMENT}/{MOVEMENT_1m}/{MOVEMENT_5m}/{MOVEMENT_15m}'.format(LUX_ID=56, WEEKDAY=56, MINDAY=56, LIGHT_LUX_1m=56, SOUND=3.4, MOVEMENT=3.4, MOVEMENT_1m=3.4, MOVEMENT_5m=3.4, MOVEMENT_15m=3.4),
                                    method='GET')
        self.assert200(response, "Response body is : " + response.data.decode('utf-8'))

    def test_get_suggested_state_change(self):
        """
        Test case for get_suggested_state_change

        Consultar cambio de estado sugerido de un dispositivo Lux
        """
        response = self.client.open('//getSuggestedStateChange/{LUX_ID}/{WEEKDAY}/{MINDAY}/{LIGHT_LUX_1m}/{SOUND}/{MOVEMENT}/{MOVEMENT_1m}/{MOVEMENT_5m}/{MOVEMENT_15m}'.format(LUX_ID=56, WEEKDAY=56, MINDAY=56, LIGHT_LUX_1m=56, SOUND=3.4, MOVEMENT=3.4, MOVEMENT_1m=3.4, MOVEMENT_5m=3.4, MOVEMENT_15m=3.4),
                                    method='GET')
        self.assert200(response, "Response body is : " + response.data.decode('utf-8'))


if __name__ == '__main__':
    import unittest
    unittest.main()
